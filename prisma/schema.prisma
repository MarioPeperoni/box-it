// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email    String  @unique
  password String
  phone    String?
  role     String  @default("USER")
  avatar   String?
  bio      String?

  stripeCustumerId String? @unique @map(name: "stripe_customer_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ProductListings ProductListing[]

  Orders Order[]

  Cart Cart?
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  status String @default("pending")

  addressId String?  @db.ObjectId
  addres    Address? @relation(fields: [addressId], references: [id])

  buyerId String @db.ObjectId
  buyer   User   @relation(fields: [buyerId], references: [id])

  productId String         @db.ObjectId
  product   ProductListing @relation(fields: [productId], references: [id])
}

model ProductListing {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  category    String
  images      String[]
  description String
  condition   String

  itemPrice     Float
  shippingPrice Float

  status String @default("active")
  views  Int    @default(0)

  createdAt DateTime @default(now())

  sellerId String @db.ObjectId
  seller   User   @relation(fields: [sellerId], references: [id])

  Order Order[]

  Cart   Cart?   @relation(fields: [cartId], references: [id])
  cartId String? @db.ObjectId
}

model Cart {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  updatedAt DateTime @updatedAt

  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  items ProductListing[]
}

model Address {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String?
  line1   String?
  line2   String?
  city    String?
  zip     String?
  country String?

  Order Order[]
}
